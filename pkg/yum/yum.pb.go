// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yum.proto

package yum

import (
	fmt "fmt"
	pb "github.com/bserdar/watermelon/server/pb"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PackageParams struct {
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Pkgs                 []string `protobuf:"bytes,3,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	Pkg                  string   `protobuf:"bytes,4,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageParams) Reset()         { *m = PackageParams{} }
func (m *PackageParams) String() string { return proto.CompactTextString(m) }
func (*PackageParams) ProtoMessage()    {}
func (*PackageParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_851d95529e7683ec, []int{0}
}

func (m *PackageParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageParams.Unmarshal(m, b)
}
func (m *PackageParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageParams.Marshal(b, m, deterministic)
}
func (m *PackageParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageParams.Merge(m, src)
}
func (m *PackageParams) XXX_Size() int {
	return xxx_messageInfo_PackageParams.Size(m)
}
func (m *PackageParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageParams.DiscardUnknown(m)
}

var xxx_messageInfo_PackageParams proto.InternalMessageInfo

func (m *PackageParams) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *PackageParams) GetPkgs() []string {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

func (m *PackageParams) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

type EnsureParams struct {
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Pkgs                 []string `protobuf:"bytes,3,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	Pkg                  string   `protobuf:"bytes,4,opt,name=pkg,proto3" json:"pkg,omitempty"`
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnsureParams) Reset()         { *m = EnsureParams{} }
func (m *EnsureParams) String() string { return proto.CompactTextString(m) }
func (*EnsureParams) ProtoMessage()    {}
func (*EnsureParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_851d95529e7683ec, []int{1}
}

func (m *EnsureParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnsureParams.Unmarshal(m, b)
}
func (m *EnsureParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnsureParams.Marshal(b, m, deterministic)
}
func (m *EnsureParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnsureParams.Merge(m, src)
}
func (m *EnsureParams) XXX_Size() int {
	return xxx_messageInfo_EnsureParams.Size(m)
}
func (m *EnsureParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EnsureParams.DiscardUnknown(m)
}

var xxx_messageInfo_EnsureParams proto.InternalMessageInfo

func (m *EnsureParams) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *EnsureParams) GetPkgs() []string {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

func (m *EnsureParams) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

func (m *EnsureParams) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetVerParams struct {
	HostId               string   `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	Pkgs                 []string `protobuf:"bytes,3,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	Pkg                  string   `protobuf:"bytes,4,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVerParams) Reset()         { *m = GetVerParams{} }
func (m *GetVerParams) String() string { return proto.CompactTextString(m) }
func (*GetVerParams) ProtoMessage()    {}
func (*GetVerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_851d95529e7683ec, []int{2}
}

func (m *GetVerParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVerParams.Unmarshal(m, b)
}
func (m *GetVerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVerParams.Marshal(b, m, deterministic)
}
func (m *GetVerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVerParams.Merge(m, src)
}
func (m *GetVerParams) XXX_Size() int {
	return xxx_messageInfo_GetVerParams.Size(m)
}
func (m *GetVerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVerParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetVerParams proto.InternalMessageInfo

func (m *GetVerParams) GetHostId() string {
	if m != nil {
		return m.HostId
	}
	return ""
}

func (m *GetVerParams) GetPkgs() []string {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

func (m *GetVerParams) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

type PkgVersion struct {
	Pkg                  string   `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PkgVersion) Reset()         { *m = PkgVersion{} }
func (m *PkgVersion) String() string { return proto.CompactTextString(m) }
func (*PkgVersion) ProtoMessage()    {}
func (*PkgVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_851d95529e7683ec, []int{3}
}

func (m *PkgVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PkgVersion.Unmarshal(m, b)
}
func (m *PkgVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PkgVersion.Marshal(b, m, deterministic)
}
func (m *PkgVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PkgVersion.Merge(m, src)
}
func (m *PkgVersion) XXX_Size() int {
	return xxx_messageInfo_PkgVersion.Size(m)
}
func (m *PkgVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_PkgVersion.DiscardUnknown(m)
}

var xxx_messageInfo_PkgVersion proto.InternalMessageInfo

func (m *PkgVersion) GetPkg() string {
	if m != nil {
		return m.Pkg
	}
	return ""
}

func (m *PkgVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetVerResult struct {
	Versions             []*PkgVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetVerResult) Reset()         { *m = GetVerResult{} }
func (m *GetVerResult) String() string { return proto.CompactTextString(m) }
func (*GetVerResult) ProtoMessage()    {}
func (*GetVerResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_851d95529e7683ec, []int{4}
}

func (m *GetVerResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVerResult.Unmarshal(m, b)
}
func (m *GetVerResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVerResult.Marshal(b, m, deterministic)
}
func (m *GetVerResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVerResult.Merge(m, src)
}
func (m *GetVerResult) XXX_Size() int {
	return xxx_messageInfo_GetVerResult.Size(m)
}
func (m *GetVerResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVerResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetVerResult proto.InternalMessageInfo

func (m *GetVerResult) GetVersions() []*PkgVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

func init() {
	proto.RegisterType((*PackageParams)(nil), "yum.PackageParams")
	proto.RegisterType((*EnsureParams)(nil), "yum.EnsureParams")
	proto.RegisterType((*GetVerParams)(nil), "yum.GetVerParams")
	proto.RegisterType((*PkgVersion)(nil), "yum.PkgVersion")
	proto.RegisterType((*GetVerResult)(nil), "yum.GetVerResult")
}

func init() { proto.RegisterFile("yum.proto", fileDescriptor_851d95529e7683ec) }

var fileDescriptor_851d95529e7683ec = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xd3, 0x37, 0x7d, 0x3b, 0x46, 0xd4, 0x3d, 0x48, 0xe8, 0xa9, 0xf4, 0x54, 0x2d,
	0x26, 0x50, 0x41, 0x0a, 0xde, 0x04, 0x91, 0x82, 0x42, 0x09, 0x58, 0xd0, 0xdb, 0x26, 0x59, 0xd3,
	0x92, 0xdd, 0xec, 0xb2, 0x7f, 0x2a, 0xf9, 0xc0, 0x7e, 0x0f, 0x69, 0xb6, 0xd1, 0x28, 0x1e, 0x7a,
	0xe8, 0x6d, 0x67, 0xe6, 0xc7, 0xc3, 0xb3, 0xf3, 0x0c, 0xf4, 0x2b, 0xc3, 0x42, 0x21, 0xb9, 0xe6,
	0xc8, 0xad, 0x0c, 0x1b, 0xf8, 0x8c, 0x67, 0x86, 0x12, 0xdb, 0x1a, 0x3d, 0xc1, 0xf1, 0x02, 0xa7,
	0x05, 0xce, 0xc9, 0x02, 0x4b, 0xcc, 0x14, 0x3a, 0x07, 0x6f, 0xc5, 0x95, 0x9e, 0x67, 0x41, 0x67,
	0xe8, 0x8c, 0xfb, 0xf1, 0xae, 0x42, 0x08, 0xba, 0xa2, 0xc8, 0x55, 0xe0, 0x0e, 0xdd, 0x71, 0x3f,
	0xae, 0xdf, 0xe8, 0x14, 0x5c, 0x51, 0xe4, 0x41, 0xb7, 0x06, 0xb7, 0xcf, 0xd1, 0x1b, 0xf8, 0xf7,
	0xa5, 0x32, 0xf2, 0x20, 0x6a, 0x28, 0x80, 0xde, 0x86, 0x48, 0xb5, 0xe6, 0x65, 0xf0, 0xaf, 0xee,
	0x36, 0xe5, 0xe8, 0x11, 0xfc, 0x07, 0xa2, 0x97, 0x44, 0x1e, 0xc4, 0xf5, 0x0c, 0x60, 0x51, 0xe4,
	0x4b, 0xab, 0xdd, 0xcc, 0x9d, 0x3f, 0x7d, 0x74, 0x7e, 0xfa, 0xb8, 0x6d, 0x7c, 0xc4, 0x44, 0x19,
	0xaa, 0xd1, 0x04, 0xfe, 0xef, 0x46, 0x2a, 0x70, 0x86, 0xee, 0xf8, 0x68, 0x7a, 0x12, 0x6e, 0xf7,
	0xff, 0x2d, 0x1f, 0x7f, 0x01, 0xd3, 0x0f, 0x07, 0xdc, 0x17, 0xc3, 0xd0, 0x04, 0x7a, 0xf3, 0x52,
	0x69, 0x4c, 0x29, 0x42, 0x96, 0x6e, 0x27, 0x32, 0xf0, 0x43, 0x91, 0x84, 0x31, 0x51, 0x82, 0x97,
	0x8a, 0xa0, 0x4b, 0xf0, 0x9e, 0x45, 0x86, 0x35, 0xd9, 0x8f, 0x8d, 0x09, 0xe3, 0x9b, 0x7d, 0xd8,
	0x0b, 0xf0, 0x6c, 0x72, 0xe8, 0xac, 0x66, 0xdb, 0x31, 0xfe, 0x42, 0x43, 0xf0, 0xec, 0xa7, 0x77,
	0x68, 0x3b, 0x89, 0x41, 0xbb, 0x65, 0x97, 0x72, 0x37, 0x7b, 0xbd, 0xc9, 0xd7, 0x7a, 0x65, 0x92,
	0x30, 0xe5, 0x2c, 0x4a, 0x29, 0x37, 0x99, 0x90, 0xeb, 0x0d, 0x4e, 0x2b, 0x8a, 0x13, 0x15, 0xbd,
	0x63, 0x4d, 0x24, 0x23, 0x94, 0x97, 0x57, 0xf6, 0x34, 0x55, 0x24, 0x8a, 0x3c, 0xaa, 0x0c, 0x4b,
	0xbc, 0xfa, 0x48, 0xaf, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x08, 0x18, 0xd0, 0xc4, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YumClient is the client API for Yum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YumClient interface {
	Install(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error)
	Update(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error)
	Remove(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error)
	Ensure(ctx context.Context, in *EnsureParams, opts ...grpc.CallOption) (*pb.Response, error)
	GetVer(ctx context.Context, in *GetVerParams, opts ...grpc.CallOption) (*GetVerResult, error)
}

type yumClient struct {
	cc *grpc.ClientConn
}

func NewYumClient(cc *grpc.ClientConn) YumClient {
	return &yumClient{cc}
}

func (c *yumClient) Install(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/yum.Yum/Install", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yumClient) Update(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/yum.Yum/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yumClient) Remove(ctx context.Context, in *PackageParams, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/yum.Yum/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yumClient) Ensure(ctx context.Context, in *EnsureParams, opts ...grpc.CallOption) (*pb.Response, error) {
	out := new(pb.Response)
	err := c.cc.Invoke(ctx, "/yum.Yum/Ensure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yumClient) GetVer(ctx context.Context, in *GetVerParams, opts ...grpc.CallOption) (*GetVerResult, error) {
	out := new(GetVerResult)
	err := c.cc.Invoke(ctx, "/yum.Yum/GetVer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YumServer is the server API for Yum service.
type YumServer interface {
	Install(context.Context, *PackageParams) (*pb.Response, error)
	Update(context.Context, *PackageParams) (*pb.Response, error)
	Remove(context.Context, *PackageParams) (*pb.Response, error)
	Ensure(context.Context, *EnsureParams) (*pb.Response, error)
	GetVer(context.Context, *GetVerParams) (*GetVerResult, error)
}

func RegisterYumServer(s *grpc.Server, srv YumServer) {
	s.RegisterService(&_Yum_serviceDesc, srv)
}

func _Yum_Install_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YumServer).Install(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yum.Yum/Install",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YumServer).Install(ctx, req.(*PackageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yum_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YumServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yum.Yum/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YumServer).Update(ctx, req.(*PackageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yum_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YumServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yum.Yum/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YumServer).Remove(ctx, req.(*PackageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yum_Ensure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnsureParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YumServer).Ensure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yum.Yum/Ensure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YumServer).Ensure(ctx, req.(*EnsureParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Yum_GetVer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVerParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YumServer).GetVer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yum.Yum/GetVer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YumServer).GetVer(ctx, req.(*GetVerParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Yum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yum.Yum",
	HandlerType: (*YumServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Install",
			Handler:    _Yum_Install_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Yum_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Yum_Remove_Handler,
		},
		{
			MethodName: "Ensure",
			Handler:    _Yum_Ensure_Handler,
		},
		{
			MethodName: "GetVer",
			Handler:    _Yum_GetVer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yum.proto",
}
